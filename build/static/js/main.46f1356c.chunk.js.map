{"version":3,"sources":["components/TodoForm.jsx","components/Todo.jsx","components/TodoList.jsx","App.jsx","index.jsx"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Date","now","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","length","map","todo","index","isComplete","key","TodoList","localStorage","getItem","JSON","parse","setTodos","setTodosWithSave","newTodos","setItem","stringify","test","updatedTodos","removedArr","filter","todoId","newValue","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46f1356c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst TodoForm = (props) => {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Date.now(),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return !todos.length ? <p className=\"white\">No todos yet..</p> : todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState(localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : []);\n  const setTodosWithSave = (newTodos) => {\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos))\n  };\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodosWithSave(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodosWithSave(todos.map(item => (item.id === todoId ? newValue : item)));\n  }\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodosWithSave(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodosWithSave(updatedTodos);\n  };\n\n  return (\n      <>\n        <h1>Список дел на сегодня</h1>\n        <TodoForm onSubmit={addTodo} />\n        <Todo\n            todos={todos}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            updateTodo={updateTodo}\n        />\n      </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from '../src/components/TodoList';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}